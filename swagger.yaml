openapi: 3.0.0

# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Burhak/DayOffPlanner/1.0.0

info:
  title: Evolveum Day Off Planner API
  version: '1.0.0'

paths:
  /admin/user:
    post:
      summary: Create new user
      operationId: createUser
      tags:
        - admin
      requestBody:
        required: true
        description: Object of user to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateApiModel'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApiModel'
        '403':
          description: Not an admin
        '409':
          description: Given email already exists

  /admin/user/{id}:
    delete:
      summary: Delete existing user
      operationId: deleteUser
      tags:
        - admin
      parameters:
        - in: path
          name: id
          description: ID of the user to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '403':
          description: Not an admin
        '404':
          description: Not found
    put:
      summary: Update existing user
      operationId: updateUser
      tags:
        - admin
      parameters:
        - in: path
          name: id
          description: ID of the user to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: Object of user to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateApiModel'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApiModel'
        '403':
          description: Not an admin
        '404':
          description: Not found

  /admin/leaveType:
    post:
      summary: Create new leave type
      operationId: createLeaveType
      tags:
        - admin
      requestBody:
        required: true
        description: Object of leave type to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveTypeCreateApiModel'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveTypeApiModel'
        '403':
          description: Not an admin
        '409':
          description: Given name already exists

  /admin/leaveType/{id}:
    delete:
      summary: Delete existing leave type
      operationId: deleteLeaveType
      tags:
        - admin
      parameters:
        - in: path
          name: id
          description: ID of the leave type to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '403':
          description: Not an admin
        '404':
          description: Not found
    put:
      summary: Update existing leave type
      operationId: updateLeaveType
      tags:
        - admin
      parameters:
        - in: path
          name: id
          description: ID of the leave type to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: Object of leave type to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveTypeCreateApiModel'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveTypeApiModel'
        '403':
          description: Not an admin
        '404':
          description: Not found

  /user/resetPassword:
    post:
      summary: Reset user password
      operationId: resetPassword
      tags:
        - user
      requestBody:
        required: true
        description: User email
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetApiModel'
      responses:
        '202':
          description: Accepted
        '404':
          description: Not found

  /user/changePassword:
    post:
      summary: Change user password
      operationId: changePassword
      tags:
        - user
      requestBody:
        required: true
        description: User old and new password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeApiModel'
      responses:
        '200':
          description: OK
        '403':
          description: Invalid password

  /user/getAll:
    get:
      summary: Get all users
      operationId: getAllUsers
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserApiModel'

  /user/{id}:
    get:
      summary: Get user by ID
      operationId: getUserById
      tags:
        - user
      parameters:
        - in: path
          name: id
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApiModel'

  /leaveType/getAll:
    get:
      summary: Get all leave types
      operationId: getAllLeaveTypes
      tags:
        - leaveType
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeaveTypeApiModel'

  /leaveType/{id}:
    get:
      summary: Get leave type by ID
      operationId: getLeaveTypeById
      tags:
        - leaveType
      parameters:
        - in: path
          name: id
          description: Leave type ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveTypeApiModel'

  /login:
    post:
      summary: Log user into the system
      operationId: loginUser
      tags:
        - auth
      requestBody:
        required: true
        description: Email and password for login
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginApiModel'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponseApiModel'
        '403':
          description: Invalid email or password

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    oAuthNoScopes: # To generate Authorization header in Angular
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://api.example.com/oauth2/authorize
          scopes: {}

  schemas:
    UserApiModel:
      type: object
      required:
        - id
        - firstName
        - lastName
        - email
        - admin
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        supervisor:
          type: integer
          format: int64
        admin:
          type: boolean
          default: false

    UserCreateApiModel:
      type: object
      required:
        - firstName
        - lastName
        - email
        - admin
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        supervisor:
          type: integer
          format: int64
        admin:
          type: boolean
          default: false

    UserLoginApiModel:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string

    UserLoginResponseApiModel:
      type: object
      required:
        - token
        - user
      properties:
        token:
          type: string
        user:
          $ref: '#/components/schemas/UserApiModel'

    PasswordResetApiModel:
      type: object
      required:
        - email
      properties:
        email:
          type: string

    PasswordChangeApiModel:
      type: object
      required:
        - oldPassword
        - newPassword
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string

    LeaveTypeApiModel:
      type: object
      required:
        - id
        - name
        - approvalNeeded
        - limited
        - halfDayAllowed
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        approvalNeeded:
          type: boolean
          default: false
        limited:
          type: boolean
          default: false
        halfDayAllowed:
          type: boolean
          default: false

    LeaveTypeCreateApiModel:
      type: object
      required:
        - name
        - approvalNeeded
        - limited
        - halfDayAllowed
      properties:
        name:
          type: string
        approvalNeeded:
          type: boolean
          default: false
        limited:
          type: boolean
          default: false
        halfDayAllowed:
          type: boolean
          default: false

security:
  - bearerAuth: []
  - oAuthNoScopes: [] # To generate Authorization header in Angular